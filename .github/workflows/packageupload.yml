name: 'Package upload to Rimo3'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      package:
        description: Package
        required: true
        type: choice
        options:
          - Audacity
          - CitrixWorkspaceAppCurrent
          - Cyberduck
          - FoxitReader
          - GoogleChrome
          - ImageGlass
          - MicrosoftPowerToys
          - MicrosoftSsmsEnu
          - MicrosoftVisualStudioCode
          - MicrosoftWvdRemoteDesktop
          - MozillaFirefox
          - Notepad++
          - PaintDotNetOfflineInstaller
          - ScreenToGif
          - TrackerSoftwarePDFXChangeEditor
          - VideoLanVlcPlayer

jobs:
  upload-package:
    runs-on: windows-latest

    steps:
        - uses: actions/checkout@v4

        - name: Install and cache PowerShell modules
          id: psmodulecache
          uses: potatoqualitee/psmodulecache@v6.2.1
          with:
            modules-to-cache: "Evergreen::, VcRedist::, PSAppDeployToolkit:4.0.6"
            updatable: true
            shell: pwsh

        - name: 'Import package: ${{ github.event.inputs.package }}'
          id: import-package
          if: github.event_name == 'workflow_dispatch'
          shell: pwsh
          working-directory: ${{ github.workspace }}
          env:
            CLIENT_ID: ${{ secrets.CLIENT_ID }}
            CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          run: |
            Import-Module -Name "Evergreen", "VcRedist" -Force
            New-Item -Path "${{ github.workspace }}\working" -ItemType Directory -Force

            # Authenticate to the API and import the library
            Write-Host "Processing: ${{ github.workspace }}\Library\${{ github.event.inputs.package }}"
            $params = @{
                ClientId     = "$env:CLIENT_ID"
                ClientSecret = "$env:CLIENT_SECRET"
                Package      = "${{ github.workspace }}\Library\${{ github.event.inputs.package }}"
                Path         = "${{ github.workspace }}\working"
                ErrorAction  = "Stop"
            }
            & "${{ github.workspace }}\Start-PackageUpload.ps1" @params
            exit 0
